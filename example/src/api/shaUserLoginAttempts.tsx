/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';
export const SPEC_VERSION = 'v1';
export interface ShaUserLoginAttemptDto {
  id?: string;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface ShaUserLoginAttemptDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: ShaUserLoginAttemptDto;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface ShaUserLoginAttemptDtoPagedResultDto {
  items?: ShaUserLoginAttemptDto[] | null;
  totalCount?: number;
}

export interface ShaUserLoginAttemptDtoPagedResultDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: ShaUserLoginAttemptDtoPagedResultDto;
}

export interface ShaUserLoginAttemptsGetQueryParams {
  id?: string;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type ShaUserLoginAttemptsGetProps = Omit<
  GetProps<ShaUserLoginAttemptDtoAjaxResponse, AjaxResponseBase, ShaUserLoginAttemptsGetQueryParams, void>,
  'path'
>;

export const ShaUserLoginAttemptsGet = (props: ShaUserLoginAttemptsGetProps) => (
  <Get<ShaUserLoginAttemptDtoAjaxResponse, AjaxResponseBase, ShaUserLoginAttemptsGetQueryParams, void>
    path={`/api/services/app/ShaUserLoginAttempts/Get`}
    {...props}
  />
);

export type UseShaUserLoginAttemptsGetProps = Omit<
  UseGetProps<ShaUserLoginAttemptDtoAjaxResponse, AjaxResponseBase, ShaUserLoginAttemptsGetQueryParams, void>,
  'path'
>;

export const useShaUserLoginAttemptsGet = (props: UseShaUserLoginAttemptsGetProps) =>
  useGet<ShaUserLoginAttemptDtoAjaxResponse, AjaxResponseBase, ShaUserLoginAttemptsGetQueryParams, void>(
    `/api/services/app/ShaUserLoginAttempts/Get`,
    props
  );

export interface ShaUserLoginAttemptsGetAllQueryParams {
  sorting?: string | null;
  skipCount?: number;
  maxResultCount?: number;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type ShaUserLoginAttemptsGetAllProps = Omit<
  GetProps<
    ShaUserLoginAttemptDtoPagedResultDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsGetAllQueryParams,
    void
  >,
  'path'
>;

export const ShaUserLoginAttemptsGetAll = (props: ShaUserLoginAttemptsGetAllProps) => (
  <Get<ShaUserLoginAttemptDtoPagedResultDtoAjaxResponse, AjaxResponseBase, ShaUserLoginAttemptsGetAllQueryParams, void>
    path={`/api/services/app/ShaUserLoginAttempts/GetAll`}
    {...props}
  />
);

export type UseShaUserLoginAttemptsGetAllProps = Omit<
  UseGetProps<
    ShaUserLoginAttemptDtoPagedResultDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsGetAllQueryParams,
    void
  >,
  'path'
>;

export const useShaUserLoginAttemptsGetAll = (props: UseShaUserLoginAttemptsGetAllProps) =>
  useGet<
    ShaUserLoginAttemptDtoPagedResultDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsGetAllQueryParams,
    void
  >(`/api/services/app/ShaUserLoginAttempts/GetAll`, props);

export interface ShaUserLoginAttemptsCreateQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type ShaUserLoginAttemptsCreateProps = Omit<
  MutateProps<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsCreateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >,
  'path' | 'verb'
>;

export const ShaUserLoginAttemptsCreate = (props: ShaUserLoginAttemptsCreateProps) => (
  <Mutate<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsCreateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >
    verb="POST"
    path={`/api/services/app/ShaUserLoginAttempts/Create`}
    {...props}
  />
);

export type UseShaUserLoginAttemptsCreateProps = Omit<
  UseMutateProps<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsCreateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >,
  'path' | 'verb'
>;

export const useShaUserLoginAttemptsCreate = (props: UseShaUserLoginAttemptsCreateProps) =>
  useMutate<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsCreateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >('POST', `/api/services/app/ShaUserLoginAttempts/Create`, props);

export interface ShaUserLoginAttemptsUpdateQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type ShaUserLoginAttemptsUpdateProps = Omit<
  MutateProps<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsUpdateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >,
  'path' | 'verb'
>;

export const ShaUserLoginAttemptsUpdate = (props: ShaUserLoginAttemptsUpdateProps) => (
  <Mutate<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsUpdateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >
    verb="PUT"
    path={`/api/services/app/ShaUserLoginAttempts/Update`}
    {...props}
  />
);

export type UseShaUserLoginAttemptsUpdateProps = Omit<
  UseMutateProps<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsUpdateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >,
  'path' | 'verb'
>;

export const useShaUserLoginAttemptsUpdate = (props: UseShaUserLoginAttemptsUpdateProps) =>
  useMutate<
    ShaUserLoginAttemptDtoAjaxResponse,
    AjaxResponseBase,
    ShaUserLoginAttemptsUpdateQueryParams,
    ShaUserLoginAttemptDto,
    void
  >('PUT', `/api/services/app/ShaUserLoginAttempts/Update`, props);

export interface ShaUserLoginAttemptsDeleteQueryParams {
  id?: string;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type ShaUserLoginAttemptsDeleteProps = Omit<
  MutateProps<void, unknown, ShaUserLoginAttemptsDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const ShaUserLoginAttemptsDelete = (props: ShaUserLoginAttemptsDeleteProps) => (
  <Mutate<void, unknown, ShaUserLoginAttemptsDeleteQueryParams, void, void>
    verb="DELETE"
    path={`/api/services/app/ShaUserLoginAttempts/Delete`}
    {...props}
  />
);

export type UseShaUserLoginAttemptsDeleteProps = Omit<
  UseMutateProps<void, unknown, ShaUserLoginAttemptsDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const useShaUserLoginAttemptsDelete = (props: UseShaUserLoginAttemptsDeleteProps) =>
  useMutate<void, unknown, ShaUserLoginAttemptsDeleteQueryParams, void, void>(
    'DELETE',
    `/api/services/app/ShaUserLoginAttempts/Delete`,
    { ...props }
  );
