/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';
export const SPEC_VERSION = 'v1';
export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface StringAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: string | null;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface FrameworkExecuteHqlResponse {}
[];

export interface FrameworkExecuteHqlQueryParams {
  query?: string | null;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type FrameworkExecuteHqlProps = Omit<
  GetProps<FrameworkExecuteHqlResponse, unknown, FrameworkExecuteHqlQueryParams, void>,
  'path'
>;

export const FrameworkExecuteHql = (props: FrameworkExecuteHqlProps) => (
  <Get<FrameworkExecuteHqlResponse, unknown, FrameworkExecuteHqlQueryParams, void>
    path={`/api/Framework/ExecuteHql`}
    {...props}
  />
);

export type UseFrameworkExecuteHqlProps = Omit<
  UseGetProps<FrameworkExecuteHqlResponse, unknown, FrameworkExecuteHqlQueryParams, void>,
  'path'
>;

export const useFrameworkExecuteHql = (props: UseFrameworkExecuteHqlProps) =>
  useGet<FrameworkExecuteHqlResponse, unknown, FrameworkExecuteHqlQueryParams, void>(
    `/api/Framework/ExecuteHql`,
    props
  );

export interface FrameworkTestEntitiesQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type FrameworkTestEntitiesProps = Omit<
  GetProps<string, unknown, FrameworkTestEntitiesQueryParams, void>,
  'path'
>;

export const FrameworkTestEntities = (props: FrameworkTestEntitiesProps) => (
  <Get<string, unknown, FrameworkTestEntitiesQueryParams, void> path={`/api/Framework/TestEntities`} {...props} />
);

export type UseFrameworkTestEntitiesProps = Omit<
  UseGetProps<string, unknown, FrameworkTestEntitiesQueryParams, void>,
  'path'
>;

export const useFrameworkTestEntities = (props: UseFrameworkTestEntitiesProps) =>
  useGet<string, unknown, FrameworkTestEntitiesQueryParams, void>(`/api/Framework/TestEntities`, props);

export interface FrameworkBootstrapReferenceListsQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type FrameworkBootstrapReferenceListsProps = Omit<
  MutateProps<StringAjaxResponse, AjaxResponseBase, FrameworkBootstrapReferenceListsQueryParams, void, void>,
  'path' | 'verb'
>;

export const FrameworkBootstrapReferenceLists = (props: FrameworkBootstrapReferenceListsProps) => (
  <Mutate<StringAjaxResponse, AjaxResponseBase, FrameworkBootstrapReferenceListsQueryParams, void, void>
    verb="POST"
    path={`/api/Framework/BootstrapReferenceLists`}
    {...props}
  />
);

export type UseFrameworkBootstrapReferenceListsProps = Omit<
  UseMutateProps<StringAjaxResponse, AjaxResponseBase, FrameworkBootstrapReferenceListsQueryParams, void, void>,
  'path' | 'verb'
>;

export const useFrameworkBootstrapReferenceLists = (props: UseFrameworkBootstrapReferenceListsProps) =>
  useMutate<StringAjaxResponse, AjaxResponseBase, FrameworkBootstrapReferenceListsQueryParams, void, void>(
    'POST',
    `/api/Framework/BootstrapReferenceLists`,
    props
  );
