/* Generated by restful-react */

import React from 'react';
import { Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';
export const SPEC_VERSION = 'v1';
export interface IsTenantAvailableInput {
  tenancyName: string;
}

export type TenantAvailabilityState = 1 | 2 | 3;

export interface IsTenantAvailableOutput {
  state?: TenantAvailabilityState;
  tenantId?: number | null;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface IsTenantAvailableOutputAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: IsTenantAvailableOutput;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface RegisterInput {
  name: string;
  surname: string;
  userName: string;
  emailAddress: string;
  password: string;
  captchaResponse?: string | null;
}

export interface RegisterOutput {
  canLogin?: boolean;
}

export interface RegisterOutputAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: RegisterOutput;
}

export interface AccountIsTenantAvailableQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AccountIsTenantAvailableProps = Omit<
  MutateProps<
    IsTenantAvailableOutputAjaxResponse,
    AjaxResponseBase,
    AccountIsTenantAvailableQueryParams,
    IsTenantAvailableInput,
    void
  >,
  'path' | 'verb'
>;

export const AccountIsTenantAvailable = (props: AccountIsTenantAvailableProps) => (
  <Mutate<
    IsTenantAvailableOutputAjaxResponse,
    AjaxResponseBase,
    AccountIsTenantAvailableQueryParams,
    IsTenantAvailableInput,
    void
  >
    verb="POST"
    path={`/api/services/app/Account/IsTenantAvailable`}
    {...props}
  />
);

export type UseAccountIsTenantAvailableProps = Omit<
  UseMutateProps<
    IsTenantAvailableOutputAjaxResponse,
    AjaxResponseBase,
    AccountIsTenantAvailableQueryParams,
    IsTenantAvailableInput,
    void
  >,
  'path' | 'verb'
>;

export const useAccountIsTenantAvailable = (props: UseAccountIsTenantAvailableProps) =>
  useMutate<
    IsTenantAvailableOutputAjaxResponse,
    AjaxResponseBase,
    AccountIsTenantAvailableQueryParams,
    IsTenantAvailableInput,
    void
  >('POST', `/api/services/app/Account/IsTenantAvailable`, props);

export interface AccountRegisterQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AccountRegisterProps = Omit<
  MutateProps<RegisterOutputAjaxResponse, AjaxResponseBase, AccountRegisterQueryParams, RegisterInput, void>,
  'path' | 'verb'
>;

export const AccountRegister = (props: AccountRegisterProps) => (
  <Mutate<RegisterOutputAjaxResponse, AjaxResponseBase, AccountRegisterQueryParams, RegisterInput, void>
    verb="POST"
    path={`/api/services/app/Account/Register`}
    {...props}
  />
);

export type UseAccountRegisterProps = Omit<
  UseMutateProps<RegisterOutputAjaxResponse, AjaxResponseBase, AccountRegisterQueryParams, RegisterInput, void>,
  'path' | 'verb'
>;

export const useAccountRegister = (props: UseAccountRegisterProps) =>
  useMutate<RegisterOutputAjaxResponse, AjaxResponseBase, AccountRegisterQueryParams, RegisterInput, void>(
    'POST',
    `/api/services/app/Account/Register`,
    props
  );
