/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export interface ApplicationInfoDto {
  version?: string | null;
  releaseDate?: string;
  features?: {
    [key: string]: boolean;
  } | null;
}

export interface UserLoginInfoDto {
  accountFound?: boolean;
  userName?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  fullName?: string | null;
  picture?: string | null;
  email?: string | null;
  mobileNumber?: string | null;
  hasRegistered?: boolean;
  loginProvider?: string | null;
  homeUrl?: string | null;
  isSelfServiceUser?: boolean;
  grantedPermissions?: string[] | null;
  id?: number;
}

export interface TenantLoginInfoDto {
  tenancyName?: string | null;
  name?: string | null;
  id?: number;
}

export interface GetCurrentLoginInformationsOutput {
  application?: ApplicationInfoDto;
  user?: UserLoginInfoDto;
  tenant?: TenantLoginInfoDto;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface GetCurrentLoginInformationsOutputAjaxResponse {
  result?: GetCurrentLoginInformationsOutput;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface StringListAjaxResponse {
  result?: string[] | null;
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export type SessionGetCurrentLoginInformationsProps = Omit<
  GetProps<GetCurrentLoginInformationsOutputAjaxResponse, AjaxResponseBase, void>,
  'path'
>;

export const SessionGetCurrentLoginInformations = (props: SessionGetCurrentLoginInformationsProps) => (
  <Get<GetCurrentLoginInformationsOutputAjaxResponse, AjaxResponseBase, void>
    path={`/api/services/app/Session/GetCurrentLoginInformations`}
    {...props}
  />
);

export type UseSessionGetCurrentLoginInformationsProps = Omit<
  UseGetProps<GetCurrentLoginInformationsOutputAjaxResponse, void>,
  'path'
>;

export const useSessionGetCurrentLoginInformations = (props: UseSessionGetCurrentLoginInformationsProps) =>
  useGet<GetCurrentLoginInformationsOutputAjaxResponse, AjaxResponseBase, void>(
    `/api/services/app/Session/GetCurrentLoginInformations`,
    props
  );

export type SessionGetGrantedShaRolesProps = Omit<GetProps<StringListAjaxResponse, AjaxResponseBase, void>, 'path'>;

/**
 * I am using this method to get user roles and it is being used on login of a user and also when changing work Order Type, Please contact me(Moses) before removing it
 */
export const SessionGetGrantedShaRoles = (props: SessionGetGrantedShaRolesProps) => (
  <Get<StringListAjaxResponse, AjaxResponseBase, void>
    path={`/api/services/app/Session/GetGrantedShaRoles`}
    {...props}
  />
);

export type UseSessionGetGrantedShaRolesProps = Omit<UseGetProps<StringListAjaxResponse, void>, 'path'>;

/**
 * I am using this method to get user roles and it is being used on login of a user and also when changing work Order Type, Please contact me(Moses) before removing it
 */
export const useSessionGetGrantedShaRoles = (props: UseSessionGetGrantedShaRolesProps) =>
  useGet<StringListAjaxResponse, AjaxResponseBase, void>(`/api/services/app/Session/GetGrantedShaRoles`, props);
