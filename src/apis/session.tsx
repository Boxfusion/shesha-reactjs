/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

export type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;

export interface ApplicationInfoDto {
  version?: string | null;
  releaseDate?: string;
  features?: {
    [key: string]: boolean;
  } | null;
}

export interface UserLoginInfoDto {
  id?: number;
  accountFound?: boolean;
  userName?: string | null;
  firstName?: string | null;
  lastName?: string | null;
  fullName?: string | null;
  picture?: string | null;
  email?: string | null;
  mobileNumber?: string | null;
  hasRegistered?: boolean;
  loginProvider?: string | null;
  homeUrl?: string | null;
  isSelfServiceUser?: boolean;
  grantedPermissions?: string[] | null;
}

export interface TenantLoginInfoDto {
  id?: number;
  tenancyName?: string | null;
  name?: string | null;
}

export interface GetCurrentLoginInformationsOutput {
  application?: ApplicationInfoDto;
  user?: UserLoginInfoDto;
  tenant?: TenantLoginInfoDto;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface GetCurrentLoginInformationsOutputAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: GetCurrentLoginInformationsOutput;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface StringListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: string[] | null;
}

export interface SessionGetCurrentLoginInformationsQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type SessionGetCurrentLoginInformationsProps = Omit<
  GetProps<
    GetCurrentLoginInformationsOutputAjaxResponse,
    AjaxResponseBase,
    SessionGetCurrentLoginInformationsQueryParams,
    void
  >,
  'path'
>;

export const SessionGetCurrentLoginInformations = (props: SessionGetCurrentLoginInformationsProps) => (
  <Get<
    GetCurrentLoginInformationsOutputAjaxResponse,
    AjaxResponseBase,
    SessionGetCurrentLoginInformationsQueryParams,
    void
  >
    path={`/api/services/app/Session/GetCurrentLoginInformations`}
    {...props}
  />
);

export type UseSessionGetCurrentLoginInformationsProps = Omit<
  UseGetProps<GetCurrentLoginInformationsOutputAjaxResponse, SessionGetCurrentLoginInformationsQueryParams, void>,
  'path'
>;

export const useSessionGetCurrentLoginInformations = (props: UseSessionGetCurrentLoginInformationsProps) =>
  useGet<
    GetCurrentLoginInformationsOutputAjaxResponse,
    AjaxResponseBase,
    SessionGetCurrentLoginInformationsQueryParams,
    void
  >(`/api/services/app/Session/GetCurrentLoginInformations`, props);

export interface SessionGetGrantedShaRolesQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type SessionGetGrantedShaRolesProps = Omit<
  GetProps<StringListAjaxResponse, AjaxResponseBase, SessionGetGrantedShaRolesQueryParams, void>,
  'path'
>;

export const SessionGetGrantedShaRoles = (props: SessionGetGrantedShaRolesProps) => (
  <Get<StringListAjaxResponse, AjaxResponseBase, SessionGetGrantedShaRolesQueryParams, void>
    path={`/api/services/app/Session/GetGrantedShaRoles`}
    {...props}
  />
);

export type UseSessionGetGrantedShaRolesProps = Omit<
  UseGetProps<StringListAjaxResponse, SessionGetGrantedShaRolesQueryParams, void>,
  'path'
>;

export const useSessionGetGrantedShaRoles = (props: UseSessionGetGrantedShaRolesProps) =>
  useGet<StringListAjaxResponse, AjaxResponseBase, SessionGetGrantedShaRolesQueryParams, void>(
    `/api/services/app/Session/GetGrantedShaRoles`,
    props
  );

export interface SessionClearPermissionsCacheQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type SessionClearPermissionsCacheProps = Omit<
  MutateProps<void, unknown, SessionClearPermissionsCacheQueryParams, void, void>,
  'path' | 'verb'
>;

export const SessionClearPermissionsCache = (props: SessionClearPermissionsCacheProps) => (
  <Mutate<void, unknown, SessionClearPermissionsCacheQueryParams, void, void>
    verb="POST"
    path={`/api/services/app/Session/ClearPermissionsCache`}
    {...props}
  />
);

export type UseSessionClearPermissionsCacheProps = Omit<
  UseMutateProps<void, SessionClearPermissionsCacheQueryParams, void, void>,
  'path' | 'verb'
>;

export const useSessionClearPermissionsCache = (props: UseSessionClearPermissionsCacheProps) =>
  useMutate<void, unknown, SessionClearPermissionsCacheQueryParams, void, void>(
    'POST',
    `/api/services/app/Session/ClearPermissionsCache`,
    props
  );
