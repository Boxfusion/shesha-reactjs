/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
/**
 * Entity property DTO
 */
export interface EntityPropertyDto {
  id?: string;
  /**
   * Property Name
   */
  name?: string | null;
  /**
   * Label (display name)
   */
  label?: string | null;
  /**
   * Description
   */
  description?: string | null;
  /**
   * Data type
   */
  dataType?: string | null;
  /**
   * Entity type. Aplicable for entity references
   */
  entityType?: string | null;
  /**
   * Reference list name
   */
  referenceListName?: string | null;
  /**
   * Reference list namespace
   */
  referenceListNamespace?: string | null;
}

/**
 * Model configuration DTO
 */
export interface ModelConfigurationDto {
  className?: string | null;
  namespace?: string | null;
  properties?: EntityPropertyDto[] | null;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface ModelConfigurationDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: ModelConfigurationDto;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface ModelConfigurationsGetByNameQueryParams {
  name?: string | null;
  namespace?: string | null;
}

export type ModelConfigurationsGetByNameProps = Omit<
  GetProps<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, ModelConfigurationsGetByNameQueryParams, void>,
  'path'
>;

export const ModelConfigurationsGetByName = (props: ModelConfigurationsGetByNameProps) => (
  <Get<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, ModelConfigurationsGetByNameQueryParams, void>
    path={`/api/services/app/ModelConfigurations/GetByName`}
    {...props}
  />
);

export type UseModelConfigurationsGetByNameProps = Omit<
  UseGetProps<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, ModelConfigurationsGetByNameQueryParams, void>,
  'path'
>;

export const useModelConfigurationsGetByName = (props: UseModelConfigurationsGetByNameProps) =>
  useGet<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, ModelConfigurationsGetByNameQueryParams, void>(
    `/api/services/app/ModelConfigurations/GetByName`,
    props
  );

export type modelConfigurationsGetByNameProps = Omit<
  RestfulShesha.GetProps<
    ModelConfigurationDtoAjaxResponse,
    AjaxResponseBase,
    ModelConfigurationsGetByNameQueryParams,
    void
  >,
  'queryParams'
>;
export const modelConfigurationsGetByName = (
  queryParams: ModelConfigurationsGetByNameQueryParams,
  props: modelConfigurationsGetByNameProps
) =>
  RestfulShesha.get<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, ModelConfigurationsGetByNameQueryParams, void>(
    `/api/services/app/ModelConfigurations/GetByName`,
    queryParams,
    props
  );

export interface ModelConfigurationsGetByIdPathParams {
  id: string;
}

export type ModelConfigurationsGetByIdProps = Omit<
  GetProps<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, void, ModelConfigurationsGetByIdPathParams>,
  'path'
> &
  ModelConfigurationsGetByIdPathParams;

export const ModelConfigurationsGetById = ({ id, ...props }: ModelConfigurationsGetByIdProps) => (
  <Get<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, void, ModelConfigurationsGetByIdPathParams>
    path={`/${id}`}
    {...props}
  />
);

export type UseModelConfigurationsGetByIdProps = Omit<
  UseGetProps<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, void, ModelConfigurationsGetByIdPathParams>,
  'path'
> &
  ModelConfigurationsGetByIdPathParams;

export const useModelConfigurationsGetById = ({ id, ...props }: UseModelConfigurationsGetByIdProps) =>
  useGet<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, void, ModelConfigurationsGetByIdPathParams>(
    (paramsInPath: ModelConfigurationsGetByIdPathParams) => `/${paramsInPath.id}`,
    { pathParams: { id }, ...props }
  );

export type modelConfigurationsGetByIdProps = Omit<
  RestfulShesha.GetProps<
    ModelConfigurationDtoAjaxResponse,
    AjaxResponseBase,
    void,
    ModelConfigurationsGetByIdPathParams
  > & { id: string },
  'queryParams'
>;
export const modelConfigurationsGetById = ({ id, ...props }: modelConfigurationsGetByIdProps) =>
  RestfulShesha.get<ModelConfigurationDtoAjaxResponse, AjaxResponseBase, void, ModelConfigurationsGetByIdPathParams>(
    `/${id}`,
    undefined,
    props
  );
