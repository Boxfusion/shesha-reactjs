/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
export interface GuidEntityWithDisplayNameDto {
  id?: string;
  displayText?: string | null;
}

export interface NoteDto {
  id?: string;
  ownerId: string;
  ownerType: string;
  creationTime?: string | null;
  category?: number | null;
  priority?: number | null;
  parentId?: string | null;
  noteText: string;
  author?: GuidEntityWithDisplayNameDto;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface NoteDtoListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: NoteDto[] | null;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface CreateNoteDto {
  id?: string;
  ownerId: string;
  ownerType: string;
  category?: number | null;
  priority?: number | null;
  parentId?: string | null;
  noteText: string;
}

export interface NoteDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: NoteDto;
}

export interface NoteDtoPagedResultDto {
  items?: NoteDto[] | null;
  totalCount?: number;
}

export interface NoteDtoPagedResultDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: NoteDtoPagedResultDto;
}

export interface UpdateNoteDto {
  id?: string;
  category?: number | null;
  priority?: number | null;
  parentId?: string | null;
  noteText: string;
}

export interface NoteGetListQueryParams {
  ownerId: string;
  ownerType: string;
  category?: number | null;
  allCategories?: boolean;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type NoteGetListProps = Omit<
  GetProps<NoteDtoListAjaxResponse, AjaxResponseBase, NoteGetListQueryParams, void>,
  'path'
>;

export const NoteGetList = (props: NoteGetListProps) => (
  <Get<NoteDtoListAjaxResponse, AjaxResponseBase, NoteGetListQueryParams, void>
    path={`/api/services/app/Note/GetList`}
    {...props}
  />
);

export type UseNoteGetListProps = Omit<
  UseGetProps<NoteDtoListAjaxResponse, AjaxResponseBase, NoteGetListQueryParams, void>,
  'path'
>;

export const useNoteGetList = (props: UseNoteGetListProps) =>
  useGet<NoteDtoListAjaxResponse, AjaxResponseBase, NoteGetListQueryParams, void>(
    `/api/services/app/Note/GetList`,
    props
  );

export const noteGetList = (
  props: RestfulShesha.GetProps<NoteDtoListAjaxResponse, AjaxResponseBase, NoteGetListQueryParams, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<NoteDtoListAjaxResponse, AjaxResponseBase, NoteGetListQueryParams, void>(
    `/api/services/app/Note/GetList`,
    props,
    signal
  );

export interface NoteCreateQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type NoteCreateProps = Omit<
  MutateProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteCreateQueryParams, CreateNoteDto, void>,
  'path' | 'verb'
>;

export const NoteCreate = (props: NoteCreateProps) => (
  <Mutate<NoteDtoAjaxResponse, AjaxResponseBase, NoteCreateQueryParams, CreateNoteDto, void>
    verb="POST"
    path={`/api/services/app/Note/Create`}
    {...props}
  />
);

export type UseNoteCreateProps = Omit<
  UseMutateProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteCreateQueryParams, CreateNoteDto, void>,
  'path' | 'verb'
>;

export const useNoteCreate = (props: UseNoteCreateProps) =>
  useMutate<NoteDtoAjaxResponse, AjaxResponseBase, NoteCreateQueryParams, CreateNoteDto, void>(
    'POST',
    `/api/services/app/Note/Create`,
    props
  );

export const noteCreate = (
  props: RestfulShesha.MutateProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteCreateQueryParams, CreateNoteDto, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<NoteDtoAjaxResponse, AjaxResponseBase, NoteCreateQueryParams, CreateNoteDto, void>(
    'POST',
    `/api/services/app/Note/Create`,
    props,
    signal
  );

export interface NoteGetQueryParams {
  id?: string;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type NoteGetProps = Omit<GetProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteGetQueryParams, void>, 'path'>;

export const NoteGet = (props: NoteGetProps) => (
  <Get<NoteDtoAjaxResponse, AjaxResponseBase, NoteGetQueryParams, void>
    path={`/api/services/app/Note/Get`}
    {...props}
  />
);

export type UseNoteGetProps = Omit<
  UseGetProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteGetQueryParams, void>,
  'path'
>;

export const useNoteGet = (props: UseNoteGetProps) =>
  useGet<NoteDtoAjaxResponse, AjaxResponseBase, NoteGetQueryParams, void>(`/api/services/app/Note/Get`, props);

export const noteGet = (
  props: RestfulShesha.GetProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteGetQueryParams, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<NoteDtoAjaxResponse, AjaxResponseBase, NoteGetQueryParams, void>(
    `/api/services/app/Note/Get`,
    props,
    signal
  );

export interface NoteGetAllQueryParams {
  keyword?: string | null;
  skipCount?: number;
  maxResultCount?: number;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type NoteGetAllProps = Omit<
  GetProps<NoteDtoPagedResultDtoAjaxResponse, AjaxResponseBase, NoteGetAllQueryParams, void>,
  'path'
>;

export const NoteGetAll = (props: NoteGetAllProps) => (
  <Get<NoteDtoPagedResultDtoAjaxResponse, AjaxResponseBase, NoteGetAllQueryParams, void>
    path={`/api/services/app/Note/GetAll`}
    {...props}
  />
);

export type UseNoteGetAllProps = Omit<
  UseGetProps<NoteDtoPagedResultDtoAjaxResponse, AjaxResponseBase, NoteGetAllQueryParams, void>,
  'path'
>;

export const useNoteGetAll = (props: UseNoteGetAllProps) =>
  useGet<NoteDtoPagedResultDtoAjaxResponse, AjaxResponseBase, NoteGetAllQueryParams, void>(
    `/api/services/app/Note/GetAll`,
    props
  );

export const noteGetAll = (
  props: RestfulShesha.GetProps<NoteDtoPagedResultDtoAjaxResponse, AjaxResponseBase, NoteGetAllQueryParams, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<NoteDtoPagedResultDtoAjaxResponse, AjaxResponseBase, NoteGetAllQueryParams, void>(
    `/api/services/app/Note/GetAll`,
    props,
    signal
  );

export interface NoteUpdateQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type NoteUpdateProps = Omit<
  MutateProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteUpdateQueryParams, UpdateNoteDto, void>,
  'path' | 'verb'
>;

export const NoteUpdate = (props: NoteUpdateProps) => (
  <Mutate<NoteDtoAjaxResponse, AjaxResponseBase, NoteUpdateQueryParams, UpdateNoteDto, void>
    verb="PUT"
    path={`/api/services/app/Note/Update`}
    {...props}
  />
);

export type UseNoteUpdateProps = Omit<
  UseMutateProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteUpdateQueryParams, UpdateNoteDto, void>,
  'path' | 'verb'
>;

export const useNoteUpdate = (props: UseNoteUpdateProps) =>
  useMutate<NoteDtoAjaxResponse, AjaxResponseBase, NoteUpdateQueryParams, UpdateNoteDto, void>(
    'PUT',
    `/api/services/app/Note/Update`,
    props
  );

export const noteUpdate = (
  props: RestfulShesha.MutateProps<NoteDtoAjaxResponse, AjaxResponseBase, NoteUpdateQueryParams, UpdateNoteDto, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<NoteDtoAjaxResponse, AjaxResponseBase, NoteUpdateQueryParams, UpdateNoteDto, void>(
    'PUT',
    `/api/services/app/Note/Update`,
    props,
    signal
  );

export interface NoteDeleteQueryParams {
  id?: string;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type NoteDeleteProps = Omit<MutateProps<void, unknown, NoteDeleteQueryParams, void, void>, 'path' | 'verb'>;

export const NoteDelete = (props: NoteDeleteProps) => (
  <Mutate<void, unknown, NoteDeleteQueryParams, void, void>
    verb="DELETE"
    path={`/api/services/app/Note/Delete`}
    {...props}
  />
);

export type UseNoteDeleteProps = Omit<
  UseMutateProps<void, unknown, NoteDeleteQueryParams, void, void>,
  'path' | 'verb'
>;

export const useNoteDelete = (props: UseNoteDeleteProps) =>
  useMutate<void, unknown, NoteDeleteQueryParams, void, void>('DELETE', `/api/services/app/Note/Delete`, { ...props });

export const noteDelete = (
  props: RestfulShesha.MutateProps<void, unknown, NoteDeleteQueryParams, void, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<void, unknown, NoteDeleteQueryParams, void, void>(
    'DELETE',
    `/api/services/app/Note/Delete`,
    props,
    signal
  );
