/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
export type RefListAreaType = 1 | 2 | 3 | 4 | 5 | 6;

export interface AutocompleteItemDto {
  value?: string | null;
  displayText?: string | null;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface AutocompleteItemDtoListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AutocompleteItemDto[] | null;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface ReferenceListItemValueDto {
  item?: string | null;
  itemValue?: number | null;
}

export interface AreaUpdateDto {
  id?: string;
  name?: string | null;
  shortName?: string | null;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
}

export interface GuidNullableEntityWithDisplayNameDto {
  id?: string | null;
  displayText?: string | null;
}

export interface AreaDto {
  id?: string;
  name?: string | null;
  shortName?: string | null;
  parentArea?: GuidNullableEntityWithDisplayNameDto;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
}

export interface AreaDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaDto;
}

export interface GetChildAreasInput {
  id?: string | null;
}

export interface AreaTreeItemDto {
  id?: string;
  name?: string | null;
  parentId?: string | null;
  hasChilds?: boolean;
}

export interface AreaTreeItemDtoListAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaTreeItemDto[] | null;
}

export interface GuidEntityDto {
  id?: string;
}

export interface AreaTreeItemDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaTreeItemDto;
}

export interface MoveAreaInput {
  id?: string;
  newParentId?: string | null;
}

export interface AreaCreateDto {
  name?: string | null;
  shortName?: string | null;
  parentArea?: GuidNullableEntityWithDisplayNameDto;
  comments?: string | null;
  areaType?: ReferenceListItemValueDto;
}

export interface AreaDtoPagedResultDto {
  items?: AreaDto[] | null;
  totalCount?: number;
}

export interface AreaDtoPagedResultDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: AreaDtoPagedResultDto;
}

export interface AreaAutocompleteQueryParams {
  term?: string | null;
  areaType?: RefListAreaType;
  parentAreaId?: string | null;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaAutocompleteProps = Omit<
  GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>,
  'path'
>;

export const AreaAutocomplete = (props: AreaAutocompleteProps) => (
  <Get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>
    path={`/api/services/app/Area/Autocomplete`}
    {...props}
  />
);

export type UseAreaAutocompleteProps = Omit<
  UseGetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>,
  'path'
>;

export const useAreaAutocomplete = (props: UseAreaAutocompleteProps) =>
  useGet<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>(
    `/api/services/app/Area/Autocomplete`,
    props
  );

export const areaAutocomplete = (
  props: RestfulShesha.GetProps<
    AutocompleteItemDtoListAjaxResponse,
    AjaxResponseBase,
    AreaAutocompleteQueryParams,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaAutocompleteQueryParams, void>(
    `/api/services/app/Area/Autocomplete`,
    props,
    signal
  );

export interface AreaCascadeSelectQueryParams {
  areaType?: RefListAreaType;
  parentAreaId?: string | null;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaCascadeSelectProps = Omit<
  GetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>,
  'path'
>;

export const AreaCascadeSelect = (props: AreaCascadeSelectProps) => (
  <Get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>
    path={`/api/services/app/Area/CascadeSelect`}
    {...props}
  />
);

export type UseAreaCascadeSelectProps = Omit<
  UseGetProps<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>,
  'path'
>;

export const useAreaCascadeSelect = (props: UseAreaCascadeSelectProps) =>
  useGet<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>(
    `/api/services/app/Area/CascadeSelect`,
    props
  );

export const areaCascadeSelect = (
  props: RestfulShesha.GetProps<
    AutocompleteItemDtoListAjaxResponse,
    AjaxResponseBase,
    AreaCascadeSelectQueryParams,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<AutocompleteItemDtoListAjaxResponse, AjaxResponseBase, AreaCascadeSelectQueryParams, void>(
    `/api/services/app/Area/CascadeSelect`,
    props,
    signal
  );

export interface AreaUpdateQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaUpdateProps = Omit<
  MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>,
  'path' | 'verb'
>;

export const AreaUpdate = (props: AreaUpdateProps) => (
  <Mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>
    verb="PUT"
    path={`/api/services/app/Area/Update`}
    {...props}
  />
);

export type UseAreaUpdateProps = Omit<
  UseMutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>,
  'path' | 'verb'
>;

export const useAreaUpdate = (props: UseAreaUpdateProps) =>
  useMutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>(
    'PUT',
    `/api/services/app/Area/Update`,
    props
  );

export const areaUpdate = (
  props: RestfulShesha.MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaUpdateQueryParams, AreaUpdateDto, void>(
    'PUT',
    `/api/services/app/Area/Update`,
    props,
    signal
  );

export interface AreaGetQueryParams {
  id?: string;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaGetProps = Omit<GetProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>, 'path'>;

export const AreaGet = (props: AreaGetProps) => (
  <Get<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>
    path={`/api/services/app/Area/Get`}
    {...props}
  />
);

export type UseAreaGetProps = Omit<
  UseGetProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>,
  'path'
>;

export const useAreaGet = (props: UseAreaGetProps) =>
  useGet<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>(`/api/services/app/Area/Get`, props);

export const areaGet = (
  props: RestfulShesha.GetProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<AreaDtoAjaxResponse, AjaxResponseBase, AreaGetQueryParams, void>(
    `/api/services/app/Area/Get`,
    props,
    signal
  );

export interface AreaGetChildTreeItemsQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaGetChildTreeItemsProps = Omit<
  MutateProps<
    AreaTreeItemDtoListAjaxResponse,
    AjaxResponseBase,
    AreaGetChildTreeItemsQueryParams,
    GetChildAreasInput,
    void
  >,
  'path' | 'verb'
>;

export const AreaGetChildTreeItems = (props: AreaGetChildTreeItemsProps) => (
  <Mutate<AreaTreeItemDtoListAjaxResponse, AjaxResponseBase, AreaGetChildTreeItemsQueryParams, GetChildAreasInput, void>
    verb="POST"
    path={`/api/services/app/Area/GetChildTreeItems`}
    {...props}
  />
);

export type UseAreaGetChildTreeItemsProps = Omit<
  UseMutateProps<
    AreaTreeItemDtoListAjaxResponse,
    AjaxResponseBase,
    AreaGetChildTreeItemsQueryParams,
    GetChildAreasInput,
    void
  >,
  'path' | 'verb'
>;

export const useAreaGetChildTreeItems = (props: UseAreaGetChildTreeItemsProps) =>
  useMutate<
    AreaTreeItemDtoListAjaxResponse,
    AjaxResponseBase,
    AreaGetChildTreeItemsQueryParams,
    GetChildAreasInput,
    void
  >('POST', `/api/services/app/Area/GetChildTreeItems`, props);

export const areaGetChildTreeItems = (
  props: RestfulShesha.MutateProps<
    AreaTreeItemDtoListAjaxResponse,
    AjaxResponseBase,
    AreaGetChildTreeItemsQueryParams,
    GetChildAreasInput,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<
    AreaTreeItemDtoListAjaxResponse,
    AjaxResponseBase,
    AreaGetChildTreeItemsQueryParams,
    GetChildAreasInput,
    void
  >('POST', `/api/services/app/Area/GetChildTreeItems`, props, signal);

export interface AreaGetTreeItemQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaGetTreeItemProps = Omit<
  MutateProps<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>,
  'path' | 'verb'
>;

export const AreaGetTreeItem = (props: AreaGetTreeItemProps) => (
  <Mutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>
    verb="POST"
    path={`/api/services/app/Area/GetTreeItem`}
    {...props}
  />
);

export type UseAreaGetTreeItemProps = Omit<
  UseMutateProps<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>,
  'path' | 'verb'
>;

export const useAreaGetTreeItem = (props: UseAreaGetTreeItemProps) =>
  useMutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>(
    'POST',
    `/api/services/app/Area/GetTreeItem`,
    props
  );

export const areaGetTreeItem = (
  props: RestfulShesha.MutateProps<
    AreaTreeItemDtoAjaxResponse,
    AjaxResponseBase,
    AreaGetTreeItemQueryParams,
    GuidEntityDto,
    void
  >,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<AreaTreeItemDtoAjaxResponse, AjaxResponseBase, AreaGetTreeItemQueryParams, GuidEntityDto, void>(
    'POST',
    `/api/services/app/Area/GetTreeItem`,
    props,
    signal
  );

export interface AreaDeleteQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaDeleteProps = Omit<
  MutateProps<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>,
  'path' | 'verb'
>;

export const AreaDelete = (props: AreaDeleteProps) => (
  <Mutate<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>
    verb="POST"
    path={`/api/services/app/Area/Delete`}
    {...props}
  />
);

export type UseAreaDeleteProps = Omit<
  UseMutateProps<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>,
  'path' | 'verb'
>;

export const useAreaDelete = (props: UseAreaDeleteProps) =>
  useMutate<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>('POST', `/api/services/app/Area/Delete`, props);

export const areaDelete = (
  props: RestfulShesha.MutateProps<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<void, unknown, AreaDeleteQueryParams, GuidEntityDto, void>(
    'POST',
    `/api/services/app/Area/Delete`,
    props,
    signal
  );

export interface AreaMoveAreaQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaMoveAreaProps = Omit<
  MutateProps<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>,
  'path' | 'verb'
>;

export const AreaMoveArea = (props: AreaMoveAreaProps) => (
  <Mutate<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>
    verb="POST"
    path={`/api/services/app/Area/MoveArea`}
    {...props}
  />
);

export type UseAreaMoveAreaProps = Omit<
  UseMutateProps<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>,
  'path' | 'verb'
>;

export const useAreaMoveArea = (props: UseAreaMoveAreaProps) =>
  useMutate<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>(
    'POST',
    `/api/services/app/Area/MoveArea`,
    props
  );

export const areaMoveArea = (
  props: RestfulShesha.MutateProps<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<void, unknown, AreaMoveAreaQueryParams, MoveAreaInput, void>(
    'POST',
    `/api/services/app/Area/MoveArea`,
    props,
    signal
  );

export interface AreaCreateQueryParams {
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaCreateProps = Omit<
  MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>,
  'path' | 'verb'
>;

export const AreaCreate = (props: AreaCreateProps) => (
  <Mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>
    verb="POST"
    path={`/api/services/app/Area/Create`}
    {...props}
  />
);

export type UseAreaCreateProps = Omit<
  UseMutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>,
  'path' | 'verb'
>;

export const useAreaCreate = (props: UseAreaCreateProps) =>
  useMutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>(
    'POST',
    `/api/services/app/Area/Create`,
    props
  );

export const areaCreate = (
  props: RestfulShesha.MutateProps<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.mutate<AreaDtoAjaxResponse, AjaxResponseBase, AreaCreateQueryParams, AreaCreateDto, void>(
    'POST',
    `/api/services/app/Area/Create`,
    props,
    signal
  );

export interface AreaGetAllQueryParams {
  sorting?: string | null;
  skipCount?: number;
  maxResultCount?: number;
  /**
   * The requested API version
   */
  'api-version'?: string;
}

export type AreaGetAllProps = Omit<
  GetProps<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>,
  'path'
>;

export const AreaGetAll = (props: AreaGetAllProps) => (
  <Get<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>
    path={`/api/services/app/Area/GetAll`}
    {...props}
  />
);

export type UseAreaGetAllProps = Omit<
  UseGetProps<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>,
  'path'
>;

export const useAreaGetAll = (props: UseAreaGetAllProps) =>
  useGet<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>(
    `/api/services/app/Area/GetAll`,
    props
  );

export const areaGetAll = (
  props: RestfulShesha.GetProps<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>,
  signal?: RequestInit['signal']
) =>
  RestfulShesha.get<AreaDtoPagedResultDtoAjaxResponse, AjaxResponseBase, AreaGetAllQueryParams, void>(
    `/api/services/app/Area/GetAll`,
    props,
    signal
  );
