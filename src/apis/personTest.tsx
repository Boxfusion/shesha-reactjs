/* Generated by restful-react */

import React from 'react';
import { Get, GetProps, useGet, UseGetProps, Mutate, MutateProps, useMutate, UseMutateProps } from 'restful-react';

import * as RestfulShesha from '../utils/fetchers';
export const SPEC_VERSION = 'v1';
export interface PersonDto {
  id?: string;
  firstName?: string | null;
  lastName?: string | null;
}

export interface ValidationErrorInfo {
  message?: string | null;
  members?: string[] | null;
}

export interface ErrorInfo {
  code?: number;
  message?: string | null;
  details?: string | null;
  validationErrors?: ValidationErrorInfo[] | null;
}

export interface PersonDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: PersonDto;
}

export interface AjaxResponseBase {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
}

export interface PersonGuidDynamicDto {
  id?: string;
}

export interface PersonGuidDynamicDtoAjaxResponse {
  targetUrl?: string | null;
  success?: boolean;
  error?: ErrorInfo;
  unAuthorizedRequest?: boolean;
  __abp?: boolean;
  result?: PersonGuidDynamicDto;
}

export interface PersonDynamicDto {
  id?: string;
  firstName?: string | null;
  lastName?: string | null;
}

export interface PersonTestGetQueryParams {
  id?: string;
}

export type PersonTestGetProps = Omit<
  GetProps<PersonDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>,
  'path'
>;

export const PersonTestGet = (props: PersonTestGetProps) => (
  <Get<PersonDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>
    path={`/api/services/Shesha/PersonTest/Get`}
    {...props}
  />
);

export type UsePersonTestGetProps = Omit<
  UseGetProps<PersonDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>,
  'path'
>;

export const usePersonTestGet = (props: UsePersonTestGetProps) =>
  useGet<PersonDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>(
    `/api/services/Shesha/PersonTest/Get`,
    props
  );

export type personTestGetProps = Omit<
  RestfulShesha.GetProps<PersonDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>,
  'queryParams'
>;
export const personTestGet = (queryParams: PersonTestGetQueryParams, props: personTestGetProps) =>
  RestfulShesha.get<PersonDtoAjaxResponse, AjaxResponseBase, PersonTestGetQueryParams, void>(
    `/api/services/Shesha/PersonTest/Get`,
    queryParams,
    props
  );

export type PersonTestUpdateOpenDynamicDtoProps = Omit<
  MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'path' | 'verb'
>;

export const PersonTestUpdateOpenDynamicDto = (props: PersonTestUpdateOpenDynamicDtoProps) => (
  <Mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>
    verb="POST"
    path={`/api/services/Shesha/PersonTest/UpdateOpenDynamicDto`}
    {...props}
  />
);

export type UsePersonTestUpdateOpenDynamicDtoProps = Omit<
  UseMutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'path' | 'verb'
>;

export const usePersonTestUpdateOpenDynamicDto = (props: UsePersonTestUpdateOpenDynamicDtoProps) =>
  useMutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>(
    'POST',
    `/api/services/Shesha/PersonTest/UpdateOpenDynamicDto`,
    props
  );

export type personTestUpdateOpenDynamicDtoProps = Omit<
  RestfulShesha.MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>,
  'data'
>;
export const personTestUpdateOpenDynamicDto = (
  data: PersonGuidDynamicDto,
  props: personTestUpdateOpenDynamicDtoProps
) =>
  RestfulShesha.mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonGuidDynamicDto, void>(
    'POST',
    `/api/services/Shesha/PersonTest/UpdateOpenDynamicDto`,
    data,
    props
  );

export type PersonTestUpdateClosedDynamicDtoProps = Omit<
  MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonDynamicDto, void>,
  'path' | 'verb'
>;

export const PersonTestUpdateClosedDynamicDto = (props: PersonTestUpdateClosedDynamicDtoProps) => (
  <Mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonDynamicDto, void>
    verb="POST"
    path={`/api/services/Shesha/PersonTest/UpdateClosedDynamicDto`}
    {...props}
  />
);

export type UsePersonTestUpdateClosedDynamicDtoProps = Omit<
  UseMutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonDynamicDto, void>,
  'path' | 'verb'
>;

export const usePersonTestUpdateClosedDynamicDto = (props: UsePersonTestUpdateClosedDynamicDtoProps) =>
  useMutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonDynamicDto, void>(
    'POST',
    `/api/services/Shesha/PersonTest/UpdateClosedDynamicDto`,
    props
  );

export type personTestUpdateClosedDynamicDtoProps = Omit<
  RestfulShesha.MutateProps<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonDynamicDto, void>,
  'data'
>;
export const personTestUpdateClosedDynamicDto = (
  data: PersonDynamicDto,
  props: personTestUpdateClosedDynamicDtoProps
) =>
  RestfulShesha.mutate<PersonGuidDynamicDtoAjaxResponse, AjaxResponseBase, void, PersonDynamicDto, void>(
    'POST',
    `/api/services/Shesha/PersonTest/UpdateClosedDynamicDto`,
    data,
    props
  );
